# Build stage
FROM $IMG_REG/golang:1.18 AS builder

# Set ARGs
ARG ACCESS_TOKEN
ARG APP_NAME=$APP_NAME
ENV ACCESS_TOKEN=$ACCESS_TOKEN
# Set workdir
WORKDIR /app

# Copy all project code
ADD . .
RUN apt-get update && apt-get install -y openssh-client git

RUN git config --global url."https://${ACCESS_TOKEN}@github.com".insteadOf "https://github.com"

# Set Go Private
RUN go env -w GOPRIVATE=github.com/machtwatch/catalystdk*

# Download dependencies
RUN --mount=type=ssh go mod download

RUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -a -ldflags '-extldflags "-static"' -o /tmp/app main.go

# Final stage
FROM $IMG_REG/alpine:latest AS production

ARG APP_ENV
ARG APP_NAME
ARG APP_PORT
ARG APP_URL
ARG AUTH_SERVER_URL
ARG DEBUG
ARG ELASTIC_ADDRESS
ARG ELASTIC_INDEX
ARG ELASTIC_PASSWORD
ARG ELASTIC_USERNAME
ARG LOG_USE_JSON
ARG MONGO_DB
ARG MONGO_HOST
ARG MONGO_PASSWORD
ARG MONGO_PORT
ARG MONGO_TIMEOUT
ARG MONGO_USER
ARG RABBITMQ_CONFIG_AUTO_DELETED
ARG RABBITMQ_CONFIG_DURABLE
ARG RABBITMQ_CONFIG_EXCLUSIVE
ARG RABBITMQ_CONFIG_INTERNAL
ARG RABBITMQ_CONFIG_NO_WAIT
ARG RABBITMQ_URI
ARG RABBITMQ_CONFIG_ACTIVE
ARG EVENT_MAX_RETRY_COUNT
ARG EVENT_REQUEUE_DELAY_MS
ARG SERVER_GRACEFUL_SHUTDOWN_TIMEOUT_S
ARG TRACE_OTLP_TARGET
ARG TRACE_SAMPLE_RATIO
ARG ACCOUNT_API_URI
ARG ACCOUNT_API_TIMEOUT_IN_SECOND

ENV APP_ENV=$APP_ENV
ENV APP_NAME=$APP_NAME
ENV APP_PORT=$APP_PORT
ENV APP_URL=$APP_URL
ENV AUTH_SERVER_URL=$AUTH_SERVER_URL
ENV DEBUG=$DEBUG
ENV ELASTIC_ADDRESS=$ELASTIC_ADDRESS
ENV ELASTIC_INDEX=$ELASTIC_INDEX
ENV ELASTIC_PASSWORD=$ELASTIC_PASSWORD
ENV ELASTIC_USERNAME=$ELASTIC_USERNAME
ENV LOG_USE_JSON=$LOG_USE_JSON
ENV MONGO_DB=$MONGO_DB
ENV MONGO_HOST=$MONGO_HOST
ENV MONGO_PASSWORD=$MONGO_PASSWORD
ENV MONGO_PORT=$MONGO_PORT
ENV MONGO_TIMEOUT=$MONGO_TIMEOUT
ENV MONGO_USER=$MONGO_USER
ENV RABBITMQ_CONFIG_AUTO_DELETED=$RABBITMQ_CONFIG_AUTO_DELETED
ENV RABBITMQ_CONFIG_DURABLE=$RABBITMQ_CONFIG_DURABLE
ENV RABBITMQ_CONFIG_EXCLUSIVE=$RABBITMQ_CONFIG_EXCLUSIVE
ENV RABBITMQ_CONFIG_INTERNAL=$RABBITMQ_CONFIG_INTERNAL
ENV RABBITMQ_CONFIG_NO_WAIT=$RABBITMQ_CONFIG_NO_WAIT
ENV RABBITMQ_URI=$RABBITMQ_URI
ENV RABBITMQ_CONFIG_ACTIVE=$RABBITMQ_CONFIG_ACTIVE
ENV EVENT_MAX_RETRY_COUNT=$EVENT_MAX_RETRY_COUNT
ENV EVENT_REQUEUE_DELAY_MS=$EVENT_REQUEUE_DELAY_MS
ENV SERVER_GRACEFUL_SHUTDOWN_TIMEOUT_S=$SERVER_GRACEFUL_SHUTDOWN_TIMEOUT_S
ENV TRACE_OTLP_TARGET=$TRACE_OTLP_TARGET
ENV TRACE_SAMPLE_RATIO=$TRACE_SAMPLE_RATIO
ENV ACCOUNT_API_URI=$ACCOUNT_API_URI
ENV ACCOUNT_API_TIMEOUT_IN_SECOND=$ACCOUNT_API_TIMEOUT_IN_SECOND

# Copy output binary file from build stage
COPY --from=builder /tmp/app .
COPY --from=builder /app/flag.yml .
COPY --from=builder /app/files ./files

# Run the app
EXPOSE 8080
CMD ["./app"]